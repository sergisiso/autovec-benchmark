#BSUB -J eTSVC
#BSUB -o /lustre/scafellpike/local/HCP055/pxs02/sss33-pxs02/workspace/phd/tsvc-runtimeparameters/KNL.%J.out
#BSUB -e /lustre/scafellpike/local/HCP055/pxs02/sss33-pxs02/workspace/phd/tsvc-runtimeparameters/KNL.%J.err
#BSUB -n 1
#BSUB -R 'span[ptile=64]'
#BSUB -W 10:00
#BSUB -q scafellpikeKNL
#BSUB -x

module load use.scafellpike

cd /lustre/scafellpike/local/HCP055/pxs02/sss33-pxs02/workspace/phd/tsvc-runtimeparameters

list = "clang gcc"
folder = "results-justesting"
arch = "avx2"

if [[ " $list " =~ ".*\ clang\ .*" ]]; then
    echo "Benchmarking Clang compiler ..."
    module load myclang6
    ./${folder}/${arch}-clang/runall_clang_knl_CONTROL_FLOW.sh
    ./runall_clang_knl_CONTROL_LOOPS.sh
    ./runall_clang_knl_CROSSING_THRESHOLDS.sh
    ./runall_clang_knl_EQUIVALENCING.sh
    ./runall_clang_knl_EXPANSION.sh
    ./runall_clang_knl_GLOBAL_DATA_FLOW.sh
    ./runall_clang_knl_INDIRECT_ADDRESSING.sh
    ./runall_clang_knl_INDUCTION_VARIABLE.sh
    ./runall_clang_knl_LINEAR_DEPENDENCE.sh
    ./runall_clang_knl_LOOP_REROLLING.sh
    ./runall_clang_knl_LOOP_RESTRUCTURING.sh
    ./runall_clang_knl_NODE_SPLITTING.sh
    ./runall_clang_knl_PACKING.sh
    ./runall_clang_knl_RECURRENCES.sh
    ./runall_clang_knl_REDUCTIONS.sh
    ./runall_clang_knl_SEARCHING.sh
    ./runall_clang_knl_STATEMENT_REORDERING.sh
    ./runall_clang_knl_SYMBOLICS.sh
    module unload myclang6
fi


#module load mygcc8
#./runall_gcc_knl_CONTROL_FLOW.sh
#./runall_gcc_knl_CONTROL_LOOPS.sh
#./runall_gcc_knl_CROSSING_THRESHOLDS.sh
#./runall_gcc_knl_EQUIVALENCING.sh
#./runall_gcc_knl_EXPANSION.sh
#./runall_gcc_knl_GLOBAL_DATA_FLOW.sh
#./runall_gcc_knl_INDIRECT_ADDRESSING.sh
#./runall_gcc_knl_INDUCTION_VARIABLE.sh
#./runall_gcc_knl_LINEAR_DEPENDENCE.sh
#./runall_gcc_knl_LOOP_REROLLING.sh
#./runall_gcc_knl_LOOP_RESTRUCTURING.sh
#./runall_gcc_knl_NODE_SPLITTING.sh
#./runall_gcc_knl_PACKING.sh
#./runall_gcc_knl_RECURRENCES.sh
#./runall_gcc_knl_REDUCTIONS.sh
#./runall_gcc_knl_SEARCHING.sh
#./runall_gcc_knl_STATEMENT_REORDERING.sh
#./runall_gcc_knl_SYMBOLICS.sh
#module unload mygcc8

#module load intel/18.2.199
#./runall_icc_knl_CONTROL_FLOW.sh
#./runall_icc_knl_CONTROL_LOOPS.sh
#./runall_icc_knl_CROSSING_THRESHOLDS.sh
#./runall_icc_knl_EQUIVALENCING.sh
#./runall_icc_knl_EXPANSION.sh
#./runall_icc_knl_GLOBAL_DATA_FLOW.sh
#./runall_icc_knl_INDIRECT_ADDRESSING.sh
#./runall_icc_knl_INDUCTION_VARIABLE.sh
#./runall_icc_knl_LINEAR_DEPENDENCE.sh
#./runall_icc_knl_LOOP_REROLLING.sh
#./runall_icc_knl_LOOP_RESTRUCTURING.sh
#./runall_icc_knl_NODE_SPLITTING.sh
#./runall_icc_knl_PACKING.sh
#./runall_icc_knl_RECURRENCES.sh
#./runall_icc_knl_REDUCTIONS.sh
#./runall_icc_knl_SEARCHING.sh
#./runall_icc_knl_STATEMENT_REORDERING.sh
#./runall_icc_knl_SYMBOLICS.sh
#module unload intel/18.2.199

module load mypgi18.4
#./runall_pgi_knl_CONTROL_FLOW.sh
#./runall_pgi_knl_CONTROL_LOOPS.sh
#./runall_pgi_knl_CROSSING_THRESHOLDS.sh
#./runall_pgi_knl_EQUIVALENCING.sh
#./runall_pgi_knl_EXPANSION.sh
#./runall_pgi_knl_GLOBAL_DATA_FLOW.sh
#./runall_pgi_knl_INDIRECT_ADDRESSING.sh
#./runall_pgi_knl_INDUCTION_VARIABLE.sh
#./runall_pgi_knl_LINEAR_DEPENDENCE.sh
#./runall_pgi_knl_LOOP_REROLLING.sh
#./runall_pgi_knl_LOOP_RESTRUCTURING.sh
#./runall_pgi_knl_NODE_SPLITTING.sh
#./runall_pgi_knl_PACKING.sh
#./runall_pgi_knl_RECURRENCES.sh
#./runall_pgi_knl_REDUCTIONS.sh
#./runall_pgi_knl_SEARCHING.sh
#./runall_pgi_knl_STATEMENT_REORDERING.sh
#./runall_pgi_knl_SYMBOLICS.sh
exit 1
module unload mypgi18.4
